class Solution {
public:

int widthOfBinaryTree(TreeNode* root) {
    if(!root){
        return 0;
    }        
    int ans=0;
    queue<pair<TreeNode*,int>>q;
    q.push({root,0});
    while(!q.empty()){
        int size=q.size();
        int first,last;
        for(int i=0;i<size;i++){
            long long currIndex=q.front().second;
            TreeNode* temp=q.front().first;
            q.pop();
            if(i==0){
                first=currIndex;
            }
            if(i==size-1){
                last=currIndex;
            }
            if(temp->left){
                q.push({temp->left,currIndex*2+1});
            }
            if(temp->right){
                q.push({temp->right,currIndex*2+2});
            }                
        }
        ans=max(ans,last-first+1);            
    }
    return ans;
}
};