class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        Queue<TreeNode> queue = new LinkedList<TreeNode>();
        List<List<Integer>> wrapList = new LinkedList<List<Integer>>();
        
        if(root == null) return wrapList;
        
        queue.add(root);
        boolean flag = true; 
        while(!queue.isEmpty()){
            int nodesInLevel = queue.size();
            List<Integer> subList = new ArrayList<>();
            
            for(int i=0; i<nodesInLevel; i++) {
                TreeNode top = queue.poll();
                if(top.left != null) queue.add(top.left);
                if(top.right != null) queue.offer(top.right);
                if(flag == true) subList.add(top.val);
                else subList.add(0, top.val);
            }
            flag = !flag; 
            wrapList.add(subList);
        }
        return wrapList;
    }
}
