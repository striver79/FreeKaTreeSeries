class Solution {
public:
    bool f(TreeNode *root1, TreeNode* root2) {
        if(!root1) return !root2;
        if(!root2) return !root1;
        return (root1->val == root2->val) && f(root1->left, root2->right) && f(root1->right, root2->left);
    }
    bool isSymmetric(TreeNode* root) {
        if(!root) return true;
        return f(root->left, root->right);
    }
};




////////////////
bool isSymmetric(TreeNode* root) {
        
        if(root == NULL)
            return true;
        
        return helper(root->left, root->right);
 }
   
   
bool helper(TreeNode* t1, TreeNode* t2){
        
        if(t1 == NULL && t2 == NULL)
            return true;
        if(t1 == NULL || t2 == NULL)
            return false;
        
        return (t1->val == t2->val) && helper(t1->left, t2->right) && helper(t1->right, t2->left);
        
    }
